{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "oneOf": [{
    "$ref": "#/definitions/config"
  }],
  "definitions": {
    "config": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "$schema": {
          "type": "string"
        },
        "app": {
          "type": "object",
          "required": ["port", "formio"],
          "properties": {
            "cors": {
              "type": "object",
              "description": "Passed through to cors lib"
            },
            "port": {
              "type": "number",
              "default": 3000,
              "description": "Port to serve the SQL Connector on. This shouldn't need to be changed if you are in a docker container"
            },
            "formio": {
              "required": ["key", "project"],
              "properties": {
                "key": {
                  "type": "string"
                },
                "project": {
                  "type": "string"
                }
              }
            },
            "auth": {
              "type": "object",
              "required": ["username", "password"],
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            },
            "externalConfig": {
              "type": "object",
              "required": ["url"],
              "additionalProperties": false,
              "properties": {
                "url": {
                  "type": "string",
                  "description": "A URL that should return a valid SQLConnector config object"
                },
                "extra": {
                  "type": "object",
                  "description": "Additional info to pass to node-fetch (headers, method, etc)"
                }
              }
            }
          }
        },
        "routes": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "method",
              "endpoint",
              "query"
            ],
            "additionalProperties": false,
            "properties": {
              "db": {
                "type": "string",
                "default": "default",
                "description": "This is a reference to the keys in the db section of this config"
              },
              "method": {
                "type": "string",
                "examples": [
                  "get", "post", "delete", "put", "index"
                ]
              },
              "endpoint": {
                "type": "string",
                "default": "/:customerId",
                "description": "URL path in the same format as express.js"
              },
              "query": {
                "type": "array",
                "minItems": 1,
                "$comment": "This format corresponds with the 'Prepared Query' format used by Resquel. Shorthand formats aren't supported with SQL Connector",
                "items": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "string",
                    "minItems": 1
                  },
                  "examples": [
                    ["SELECT * FROM customer WHERE customerId = ?", "params.customerId"]
                  ]
                }
              }
            }
          }
        },
        "db": {
          "$comment": "Set up this way to give the suggestion of default, but allow for anything",
          "patternProperties": {
            ".*": {
              "$ref": "#/definitions/db"
            }
          },
          "properties": {
            "default": {
              "$ref": "#/definitions/db"
            }
          },
          "minProperties": 1
        }
      }
    },
    "db": {
      "type": "object",
      "properties": {
        "client": {
          "type": "string",
          "default": "mysql",
          "examples": [
            "mssql",
            "mysql",
            "postgresql"
          ]
        },
        "connection": {
          "type": "object",
          "$comment": "Properties here are for reference purposes only. View knex documentation: http://knexjs.org/#Installation-client",
          "properties": {
            "host": {
              "type": "string",
              "default": "localhost"
            },
            "database": {
              "type": "string"
            },
            "user": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "client", "connection"
      ]
    }
  }
}
